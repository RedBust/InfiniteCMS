News:
  connection: other
  actAs: [ Timestampable ]
  columns:
    author_id: int(9)
    title: varchar(255)
    content: text
  relations:
    Comments:
      class: Comment
      type: many
      local: id
      foreign: news_id
    Author:
      class: User
      local: author_id
      foreign: id
Comment:
  connection: other
  actAs:
    Timestampable:
      updated:
        disabled: true
  columns:
    news_id: integer(9)
    author_id: integer(9)
    title: varchar(255)
    content: text
  relations:
    News:
      local: news_id
      foreign: id
    Author:
      class: User
      local: author_id
      foreign: id

ShopCategory:
  connection: other
  columns:
    name: varchar(255)
  relations:
    Items:
      class: ShopItem
      type: many
      local: id
      foreign: category_id
ShopItem:
  connection: other
  columns:
    category_id: int(9)
    name: varchar(255)
    cost: integer(9)
    cost_vip: integer(9)
    description: text
    is_vip:
      type: boolean
      default: 0
    is_lottery:
      type: boolean
      default: 0
    is_hidden:
      type: boolean
      default: 0
  relations:
    Effects:
      class: ShopItemEffect
      type: many
      local: id
      foreign: item_id
    Category:
      class: ShopCategory
      type: one
      local: category_id
      foreign: id
ShopItemEffect:
  connection: other
  columns:
    item_id: integer(9)
    type: integer(9)
    value: varchar(255)
  relations:
    Item:
      class: ShopItem
      local: item_id
      foreign: id

User:
  connection: other
  columns:
    guid: integer(9)
    lastVote: integer(9)
    points:
      type: integer(9)
      default: 0
    audiotel:
      type: integer(9)
      default: 0
    votes:
      type: integer(9)
      default: 0
    lastIP: integer(9)
    culture: varchar(255)
    main_char: integer(9)
  relations:
    Comments:
      class: Comment
      type: many
      local: id
      foreign: author_id
    Review:
      local: id
      foreign: author_id
    PollOptions:
      class: PollOption
      type: many
      refClass: PollOptionUser
      local: account_id
      foreign: poll_option_id
    Account:
      local: guid
      foreign: guid
StaffRole:
  connection: other
  columns:
    account_id: int(9)
    name: varchar(255)
  relations:
    Account:
      local: account_id
      foreign: guid

#Bug:
#  connection: other
#  actAs: [Timestampable]
#  columns:
#    title: varchar(255)
#    description: text
#    author: text
#    state:
#Envoyé - en cours - résolu
#      type: enum
#      length: 3
#      values: [0, 1, 2]
Review:
  connection: other
  actAs:
    Timestampable:
      updated:
        disabled: true
  columns:
    author_id: integer(9)
    comment: text
  relations:
    Author:
      class: User
      local: author_id
      foreign: id

#Structure from DGuardCMS (Andaeriel)
Poll:
  connection: other
  columns:
    name: string(255)
    date_start: date
    date_end: date
  relations:
    Options:
      class: PollOption
      type: many
      local: id
      foreign: poll_id
PollOption:
  connection: other
  columns:
    poll_id: integer(9)
    name: string(255)
  relations:
    Polleds:
      class: User
      refClass: PollOptionUser
      type: many
      local: poll_option_id
      foreign: account_id
    Poll:
      local: poll_id
      foreign: id
      type: one
PollOptionUser:
  connection: other
  columns:
    poll_option_id: integer(9)
    account_id: integer(9)
  relations:
    User:
       local: account_id
       foreign: id
    PollOption:
       local: poll_option_id
       foreign: id

#Nami-D0C: little explanation about my tickets system
# TicketCategory as Category actAs NestedSet
#  and hasMany Ticket as Tickets
# Ticket can also be stated, i.e. locked, to do, resolved, resolving and deleted.
#  and hasMany Anwer as Answers (it's as ALL boards systems with topics/posts: A thread (here Ticket) contains answers)
TicketCategory:
  connection: other
  actAs: #ok it would be nice if I can use both I18n-able & others but... It's impossible (and I don't like I18n-able so much ...)
    NestedSet:
      hasManyRoots: true #I.E. roots: ["D1", "D2", "WTG", "W", "DA"]
  columns:
    name: varchar(255)
    icon: varchar(40)
    description: text
  relations:
    Ticket:
      local: id
      foreign: category_id
      alias: Tickets
      type: many
Ticket:
  columns:
    category_id: int(9)
    state:
      type: enum
      values: [locked, to do, resolved, resolving, deleted]
    name: varchar(255) #"topic" name
  relations:
    Category:
      class: TicketCategory
      local: category_id
      foreign: id
    Answers:
      class: TicketAnswer
      type: many
      local: id
      foreign: ticket_id
TicketAnswer:
  connection: other
  actAs: [Timestampable]
  columns:
    ticket_id: int(9)
    author_id: int(9)
    content: text
  relations:
    Ticket:
      local: ticket_id
      foreign: id
    User:
      local: author_id
      foreign: id
      alias: Author

PrivateMessageThread:
  connection: other
  columns:
    title: varchar(255)
  relations:
    Answers:
      class: PrivateMessageAnswer
      type: many
      local: id
      foreign: thread_id
    Receivers:
      class: PrivateMessageThreadReceiver
      type: many
      local: id
      foreign: thread_id
PrivateMessageAnswer:
  connection: other
  actAs:
    Timestampable:
      updated:
        disabled: true
  columns:
    thread_id: int
    author_id: int
    message: text
  relations:
    Thread:
      class: PrivateMessageThread
      type: one
      local: thread_id
      foreign: id
    Author:
      class: User
      local: author_id
      foreign: guid
PrivateMessageThreadReceiver:
  connection: other
  columns:
    thread_id: int
    user_guid: int
    present:
      type: bool
      default: true
    next_page:
      type: int
      default: 1
  relations:
    Thread:
      class: PrivateMessageThread
      local: thread_id
      foreign: id
    User:
      local: user_guid
      foreign: guid
    Account:
      local: user_guid
      foreign: guid

Event:
  connection: other
  columns:
    guild_id: int(9)
    winner_id: int(9)
    reward_id: int(9)
    is_tombola: bool
    name: varchar(255) #i.e. "goodbye server /rofl"
    period: datetime
    capacity:
      type: int(9)
      default: -1
  relations:
    Participants:
      class: Character
      refClass: EventParticipant
      type: many
      local: event_id
      foreign: character_id
    Guild:
      local: guild_id
      foreign: id
    Winner:
      class: Character
      local: winner_id
      foreign: guid
    Reward:
      class: ShopItem
      local: reward_id
      foreign: id
EventParticipant:
  connection: other
  columns:
    event_id: int
    character_id: int



Account:
  connection: other
  tableName: accounts
  columns:
    guid:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: true
      autoincrement: true
    account:
      type: string(30)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    pass:
      type: string(50)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    level:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    email:
      type: string(100)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    lastip:
      type: string(15)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    lastconnectiondate:
      type: string(100)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    question:
      type: string(100)
      fixed: false
      unsigned: false
      primary: false
      default: DELETE?
      notnull: true
      autoincrement: false
    reponse:
      type: string(100)
      fixed: false
      unsigned: false
      primary: false
      default: DELETE
      notnull: true
      autoincrement: false
    pseudo:
      type: string(30)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    banned:
      type: integer(1)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    reload_needed:
      type: integer(1)
      fixed: false
      unsigned: false
      primary: false
      default: '1'
      notnull: true
      autoincrement: false
    bankkamas:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    bank:
      type: string()
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    friends:
      type: string()
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    logged:
      type: boolean
      default: '0'
    vip:
      type: boolean
      default: '0'
  relations:
    User:
      local: guid
      foreign: guid
    Characters:
      class: Character
      type: many
      local: guid
      foreign: account
    StaffRoles:
      class: StaffRole
      type: many
      local: guid
      foreign: account_id
GuildMember:
  connection: other
  tableName: guild_members
  columns:
    guid:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: true
      notnull: true
      autoincrement: false
    guild:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    rank:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    rights:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    xpdone:
      type: integer(8)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    pxp:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
  relations:
    Guild:
      type: one
      local: guild
      foreign: id
    Character:
      local: guid
      foreign: guid
Guild:
  connection: other
  tableName: guilds
  columns:
    id:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    name:
      type: string(50)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    emblem:
      type: string(20)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    lvl:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '1'
      notnull: true
      autoincrement: false
    xp:
      type: integer(8)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
  relations:
    Members:
      class: GuildMember
      type: many
      local: id
      foreign: guild
Item:
  connection: other
  tableName: items
  columns:
    guid:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: true
      autoincrement: false
    template:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    qua:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    pos:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    stats:
      type: string()
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
LiveAction:
  connection: other
  tableName: live_action
  columns:
    id:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: true
      autoincrement: true
    playerid:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    action:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    nombre:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
  relations:
    Character:
      type: one
      local: playerid
      foreign: guid
MountPark:
  connection: other
  tableName: mountpark_data
  columns:
    mapid:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: true
      autoincrement: false
    size:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    owner:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    guild:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '-1'
      notnull: true
      autoincrement: false
    price:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    data:
      type: string()
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
Mount:
  connection: other
  tableName: mounts_data
  columns:
    id:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: true
      autoincrement: false
    color:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    sexe:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    name:
      type: string(30)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    xp:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    level:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    endurance:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    amour:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    maturite:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    serenite:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    reproductions:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    fatigue:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    energie:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    items:
      type: string()
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    ancetres:
      type: string(50)
      fixed: false
      unsigned: false
      primary: false
      default: ',,,,,,,,,,,,,'
      notnull: true
      autoincrement: false
  relations:
    Owner:
      class: Character
      local: id
      foreign: mount
Character:
  connection: other
  tableName: personnages
  columns:
    guid:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: true
      autoincrement: false
    name:
      type: string(30)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    sexe:
      type: integer(1)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    class:
      type: integer(2)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    color1:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    color2:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    color3:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    kamas:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    spellboost:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    capital:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    energy:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '10000'
      notnull: true
      autoincrement: false
    level:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    xp:
      type: integer(8)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    size:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    gfx:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    alignement:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    honor:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    deshonor:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    alvl:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '1'
      notnull: true
      autoincrement: false
    account:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    vitalite:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: false
      autoincrement: false
    force:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    sagesse:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    intelligence:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    chance:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    agilite:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    seespell:
      type: integer(1)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    seefriend:
      type: integer(1)
      fixed: false
      unsigned: false
      primary: false
      default: '1'
      notnull: true
      autoincrement: false
    canaux:
      type: string(15)
      fixed: false
      unsigned: false
      primary: false
      default: '*#%!pi$:?'
      notnull: true
      autoincrement: false
    map:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '8479'
      notnull: true
      autoincrement: false
    cell:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    pdvper:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '100'
      notnull: true
      autoincrement: false
    spells:
      type: string()
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    objets:
      type: string()
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    savepos:
      type: string(20)
      fixed: false
      unsigned: false
      primary: false
      default: '10298,314'
      notnull: true
      autoincrement: false
    zaaps:
      type: string(250)
      fixed: false
      unsigned: false
      primary: false
      default: ''
      notnull: true
      autoincrement: false
    jobs:
      type: string()
      fixed: false
      unsigned: false
      primary: false
      notnull: true
      autoincrement: false
    mountxpgive:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '0'
      notnull: true
      autoincrement: false
    mount:
      type: integer(4)
      fixed: false
      unsigned: false
      primary: false
      default: '-1'
      notnull: true
      autoincrement: false
  relations:
    Account:
      local: account
      foreign: guid
    GuildMember:
      local: guid
      foreign: guid
    LiveActions:
      class: LiveAction
      type: many
      local: guid
      foreign: playerid
    Mount:
      local: mount
      foreign: id
    Events:
      class: Event
      refClass: EventParticipant
      type: many
      local: character_id
      foreign: event_id